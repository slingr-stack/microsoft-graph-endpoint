{
    "label": "Microsoft SharePoint",
    "name": "sharepoint",
    "apiVersion": "v1",
    "internal": false,
    "configurationType": "PER_USER",
    "deployment": {
        "type": "java11",
        "profiles":[
            {
                "name": "default",
                "label": "Default",
                "memory": 256,
                "description": "Default configuration"
            }
        ],
        "allowMultipleInstances": false
    },
    "icon48": "https://storage.googleapis.com/slingr-dev-platform/platform/endpoints/sharepoint.png",
    "configurationHelpUrl": "/endpoints-sharepoint.html#configuration",
    "status": "ACTIVE",
    "stores": [
        {"name": "installations"}
    ],
    "events": [
        {
            "label": "Webhook",
            "name": "webhook",
            "description": "Happens when GitHub sends a webhook to the endpoint."
        }
    ],
    "functions": [
        {
            "label": "GET",
            "name": "_get",
            "functionType": "GLOBAL",
            "description": "Sends a GET request using stored credentials"
        },
        {
            "label": "POST",
            "name": "_post",
            "functionType": "GLOBAL",
            "description": "Sends a POST request using stored credentials"
        },
        {
            "label": "PUT",
            "name": "_put",
            "functionType": "GLOBAL",
            "description": "Sends a PUT request using stored credentials"
        },
        {
            "label": "PATCH",
            "name": "_patch",
            "functionType": "GLOBAL",
            "description": "Sends a PATCH request using stored credentials"
        },
        {
            "label": "DELETE",
            "name": "_delete",
            "functionType": "GLOBAL",
            "description": "Sends a DELETE request using stored credentials"
        }
    ],
    "scripts":[
        "functions.js"
    ],
    "flowSteps": [
        "apiCallSharepoint"
    ],
    "configuration":[
        {
            "name": "clientId",
            "label": "Client ID",
            "description": "Client ID assigned by Google for your application",
            "type": "text",
            "required": true
        },
        {
            "name": "clientSecret",
            "label": "Client secret",
            "description": "Client secret generated by Google for your application",
            "type": "text",
            "required": true
        },
        {
            "name": "tenantId",
            "label": "Tenant Id",
            "description": "Tenant Id assigned by Azure for your application",
            "type": "text",
            "required": true
        },
        {
            "name": "scope",
            "label": "Scope",
            "description": "The scope of the access request is separated by semicolons. For example: \"mail.read;user.read\".",
            "type": "text",
            "required": true
        },
        {
            "name": "oauthCallback",
            "label": "OAuth callback",
            "description": "The OAuth callback to configure in your GitHub App",
            "type": "label",
            "value": "config.WEBHOOK_URL+'/authCallback'"
        },
        {
            "name": "webhooksUrl",
            "label": "Webhooks URL",
            "description": "The URL to configure in webhooks of your GitHub App",
            "type": "label",
            "value": "@config.WEBHOOK_URL"
        }
    ],
    "userConfiguration":[
        {
            "name": "code",
            "label": "Token",
            "type": "text",
            "visibility": false
        },
        {
            "name": "redirectUri",
            "label": "Redirect URI",
            "type": "text",
            "visibility": false
        },
        {
            "name" : "connectButton",
            "label" : "Connect to SharePoint",
            "type" : "button",
            "typeOptions": {
                "color" : "primary",
                "icon" : "zmdi-play",
                "action" : "var redirectUri = (config.LOCAL ? 'http://localhost:10000' : config.WEBHOOK_URL) + '/authCallback';\nvar scope = encodeURIComponent('openid offline_access ' + config.ENDPOINT_CONFIG['scope'].replace(/;/g, ' '));\nvar url = 'https://login.microsoftonline.com/'+config.ENDPOINT_CONFIG['tenantId']+'/oauth2/v2.0/authorize?client_id='+config.ENDPOINT_CONFIG['clientId']+'&response_type=code&redirect_uri='+encodeURIComponent(redirectUri)+'&response_mode=query&scope='+scope;\nvar win = window.open(url, 'Authorization page', 'toolbar=no,scrollbars=no,location=no,statusbar=no,menubar=no,resizable=0,width=500,height=600,left='+((screen.width/2)-250)+',top='+((screen.height/2)-250)+',');\n\nvar self = this;\n\nvar intervalFn = function() {\n    try {\n        if (!win || !win.document) {\n            window.clearInterval(pollTimer);\n        }else{\n            if (win.document.URL.indexOf('/authCallback') != -1) {\n                win.innerWidth = 100;\n                win.innerHeight = 100;\n                win.screenX = screen.width;\n                win.screenY = screen.height;\n                window.clearInterval(pollTimer);\n                url = win.document.URL;\n                var pos = url.indexOf('code=');\n                if(pos > -1) {\n                    var token = url.substring(pos + 5);\n                    var limit = token.indexOf(\"&\");\n                    if (limit > -1) {\n                        token = token.substring(0, limit);\n                    }\n                    config.code = token;\n                    config.redirectUri = redirectUri;\n                    if (utils.connectToService) {\n                        utils.connectToService();\n                    }\n                }\n                try{win.close();}catch(e){}\n            }\n        }\n    } catch(e) {}\n};\n\nvar pollTimer = window.setInterval(function() {intervalFn.apply(self);}, 500);"
            },
            "visibility" : "config.ENDPOINT_STATUS == 'DISCONNECTED'"
        }
    ],
    "userConfigurationButtons":{
        "connect": false
    }
}